%%  Sau MATLAB Colony Analyzer Toolkit
%
%%  LIGap_p.m

%   Author: Saurin Parikh, February 2019
%   dr.saurin.parikh@gmail.com

%   Linear Interpolation to predict plate background while introducing gaps
%   in the reference grid.

%   Part of LIEval.

%%

    function [data_fit, pos_miss] = LIGap_p(hours,n_plates,p2c_info,cont_name,...
        tablename_p2o,tablename_jpeg,pos_border,ss,IL)
    
        connectSQL;
        ss = ss/2;
        
        for ii = 1:length(hours)
            temp = [];
            for iii = 1:length(n_plates.x6144plate)

                pos.all = fetch(conn, sprintf(['select a.pos ',...
                    'from %s a ',...
                    'where %s = %d ',...
                    'order by %s, %s'],...
                    p2c_info(1,:),...
                    p2c_info(2,:),...
                    n_plates.x6144plate(iii),...
                    p2c_info(3,:),...
                    p2c_info(4,:)));

                pos.cont = fetch(conn, sprintf(['select a.pos ',...
                    'from %s a, %s b ',...
                    'where a.pos = b.pos and %s = %d and a.orf_name = ''%s'' ',...
                    'order by %s, %s'],...
                    tablename_p2o,...
                    p2c_info(1,:),...
                    p2c_info(2,:),...
                    n_plates.x6144plate(iii),...
                    cont_name,...
                    p2c_info(3,:),...
                    p2c_info(4,:)));

                avg_data = fetch(conn, sprintf(['select a.pos, a.hours, a.average ',...
                    'from %s a, %s b ',...
                    'where a.pos = b.pos and hours = %d and %s = %d ',...
                    'order by %s, %s'],...
                    tablename_jpeg,...
                    p2c_info(1,:),...
                    hours(ii),...
                    p2c_info(2,:),...
                    n_plates.x6144plate(iii),...
                    p2c_info(3,:),...
                    p2c_info(4,:)));

        %%  INTRODUCE GAPS
        
                if iii == 1
                    [pos_miss, p] = datasample(pos.cont.pos(~ismember(pos.cont.pos, pos_border.pos)),...
                        ss,'Replace',false);
                else
                    pos_miss = pos.cont.pos(p);
                end
                pos_cont = pos.cont.pos(~ismember(pos.cont.pos,pos_miss));
                
                cont_pos = col2grid(ismember(pos.all.pos, pos_cont));
                cont_avg = col2grid(avg_data.average).*cont_pos;

        %%  CALCULATE BACKGROUND
        
                cont_avg(cont_avg == 0) = NaN;
                [a,b,c,d] = downscale(cont_avg);
                plates = {a,b,c,d};

                bground = LIHeart(plates,IL);
                
                bg{iii} = grid2row(plategen(bground{1},bground{2},bground{3},bground{4}))';%.*nonzero)';
                bg{iii}(bg{iii} == 0) = NaN;
                temp = abs([temp; [pos.all.pos, ones(length(pos.all.pos),1)*hours(ii),...
                    bg{iii}, avg_data.average, avg_data.average./bg{iii}]]);
                
            end
            data_fit{ii} = temp;
        end
    end