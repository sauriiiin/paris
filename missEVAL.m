
    
    cd /home/sbp29/MATLAB

    addpath('/home/sbp29/MATLAB/Matlab-Colony-Analyzer-Toolkit')
    addpath('/home/sbp29/MATLAB/bean-matlab-toolkit')
    addpath('/home/sbp29/MATLAB/sau-matlab-toolkit/grid-manipulation')
    addpath('/home/sbp29/MATLAB/sau-matlab-toolkit')
    addpath('/home/sbp29/MATLAB/paris')

    javaaddpath('/home/sbp29/MATLAB/mysql-connector-java-8.0.12.jar');

    expt_name = '4C2_R1';
    density = 6144;
    hours = [18:21,24:30];
    
%   MySQL Table Details  
    
    tablename_jpeg      = sprintf('%s_%d_JPEG',expt_name,density);
    tablename_norm      = sprintf('%s_%d_NORM',expt_name,density);
    tablename_fit       = sprintf('%s_%d_FITNESS',expt_name,density);
    
    tablename_p2o       = 'VP_pos2orf_name1';
    tablename_bpos      = 'VP_borderpos';
    
%   Reference Strain Name

    cont.name           = 'BF_control';
    
%   MySQL Connection and fetch initial data

    connectSQL;
    
    p2c_info(1,:) = 'VP_pos2coor6144';
    p2c_info(2,:) = '6144plate      ';
    p2c_info(3,:) = '6144col        ';
    p2c_info(4,:) = '6144row        ';

    p2c = fetch(conn, sprintf(['select * from %s a ',...
        'order by a.%s, a.%s, a.%s'],...
        p2c_info(1,:),...
        p2c_info(2,:),...
        p2c_info(3,:),...
        p2c_info(4,:)));
    
    n_plates = fetch(conn, sprintf(['select distinct %s from %s a ',...
        'order by %s asc'],...
        p2c_info(2,:),...
        p2c_info(1,:),...
        p2c_info(2,:)));
    
%   Making control grid from PT2 experiment
    cont96 = fetch(conn, ['select pos from PT2_pos2orf_name ',...
        'where orf_name = ''BF_control'' ',...
        'and pos < 10000 ',...
        'and pos not in ',...
        '(select * from PT2_borderpos)']);

    all6144 = fetch(conn, ['select a.pos ',...
        'from PT2_pos2orf_name a, PT2_pos2coor6144 b ',...
        'where a.pos = b.pos and 6144plate = 1 ',...
        'order by 6144plate, 6144col, 6144row']);

    cont6144 = fetch(conn, ['select a.pos ',...
        'from PT2_pos2orf_name a, PT2_pos2coor6144 b ',...
        'where a.pos = b.pos and 6144plate = 1 ',...
        'and a.orf_name = ''BF_control'' ',...
        'order by 6144plate, 6144col, 6144row']);

    pos_reps = [110000,120000,130000,140000];

    iii = 1;
    
    pos.border = fetch(conn, sprintf('select pos from %s',...
         tablename_bpos));
   
    pos.all = fetch(conn, sprintf(['select a.pos ',...
        'from %s a ',...
        'where %s = %d ',...
        'order by %s, %s'],...
        p2c_info(1,:),...
        p2c_info(2,:),...
        n_plates.x6144plate(iii),...
        p2c_info(3,:),...
        p2c_info(4,:)));

    pos.cont = fetch(conn, sprintf(['select a.pos ',...
        'from %s a, %s b ',...
        'where a.pos = b.pos and %s = %d and a.orf_name = ''%s'' ',...
        'order by %s, %s'],...
        tablename_p2o,...
        p2c_info(1,:),...
        p2c_info(2,:),...
        n_plates.x6144plate(iii),...
        cont.name,...
        p2c_info(3,:),...
        p2c_info(4,:)));

    for ii = 1:length(hours)
        avg_data = fetch(conn, sprintf(['select a.pos, a.hours, a.average ',...
            'from %s a, %s b ',...
            'where a.pos = b.pos and hours = %d and %s = %d ',...
            'order by %s, %s'],...
            tablename_jpeg,...
            p2c_info(1,:),...
            hours(ii),...
            p2c_info(2,:),...
            n_plates.x6144plate(iii),...
            p2c_info(3,:),...
            p2c_info(4,:)));

        data = []; rmse = [];
        ss = [0, 25:2:100];

        for j=1:length(ss)
            tt = 0;
            for n = 1:20
                temp = pos_reps + datasample(cont96.pos, ss(j), 'Replace', false);
                pos_cont = cont6144.pos(~ismember(cont6144.pos, temp));
                cont_pos = col2grid(ismember(all6144.pos, pos_cont));

                cont_avg = col2grid(avg_data.average).*cont_pos;

                cont_avg(cont_avg == 0) = NaN;
                [a,b,c,d] = downscale(cont_avg);
                plates = {a,b,c,d};

                bground = LIHeart(plates,0);

                bg = grid2row(plategen(bground{1},bground{2},bground{3},bground{4}))';
                bg(bg == 0) = NaN;
                bg(isnan(avg_data.average)) = NaN;

                rmse{j}(:,n) = abs(bg - avg_data.average);

                if ranksum(rmse{1}(:,1),rmse{j}(:,n),'tail','left') <= 0.05
                    tt = tt + 1;
                end
                clear bg
            end
            fprintf(['Significantly poor SE %d/%d times when %d ',...
                'references are missing at %d hrs.\n'],tt,n,ss(j)*4,hours(ii))
            data = [data; [ss(j)*4, tt]];
        end
        fig = figure('Renderer', 'painters', 'Position', [10 10 960 600],'visible','off');
        scatter(data(:,1),data(:,2)/n*100,'MarkerEdgeColor',[0 .5 .5],...
                      'MarkerFaceColor',[0 .7 .7],...
                      'LineWidth',2);
        grid on
        grid minor
        xlim([90,310])
        ylim([-0.5,100+.5])
        title('Missing References (w/o IL)')
        xlabel('Number of References Missing')
        ylabel('Significantly Lower SE (% count)')
        saveas(fig,sprintf('miss%d_nil_term.png',hours(ii)))
    end
  
    
